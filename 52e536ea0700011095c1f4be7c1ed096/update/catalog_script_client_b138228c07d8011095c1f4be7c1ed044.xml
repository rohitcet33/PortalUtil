<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="catalog_script_client">
    <catalog_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_catalog>true</applies_catalog>
        <applies_extended>false</applies_extended>
        <applies_req_item>false</applies_req_item>
        <applies_sc_task>false</applies_sc_task>
        <applies_target_record>false</applies_target_record>
        <applies_to>set</applies_to>
        <cat_item/>
        <cat_variable/>
        <condition/>
        <description/>
        <field/>
        <global>true</global>
        <isolate_script>true</isolate_script>
        <messages/>
        <name>set variable value from url</name>
        <order/>
        <script><![CDATA[function onLoad() {
	
	var prop, propVal;
	//get parameter from URL
	var objVariables = getParameterValue('sysparm_variables');
	console.debug('sysparm_variables URI parameter value: ' + objVariables);
	if (!objVariables || objVariables == '' || objVariables.indexOf('{') != 0) {
		//If variables is empty or not properly formatted, stop here.
		console.debug('aborting due to a missing or problematic sysparm_variables URI parameter');
		return;
	}
	objVariables = JSON.parse(objVariables);
	console.debug('sysparm_variables URI parameter value: ' + JSON.stringify(objVariables));
	
	for (prop in objVariables) {
		if (!objVariables.hasOwnProperty(prop)) {
			break;
		}
		propVal = objVariables[prop];
		console.debug('Processing property ' + prop + ' with value ' + propVal);
		
		if (g_form.hasField(prop)) {
			console.debug('Setting variable ' + prop + ' to value ' + propVal);
			g_form.setValue(prop, propVal);
		} else {
			console.warn('Variable ' + prop +
				', specified in the sysparm_variables URI parameter, does not exist on this catalog item form.');
		}
	}
}

function getParameterValue(name) {
	name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
	var regexS = "[\\?&]" + name + "=([^&#]*)";
	var regex = new RegExp(regexS);
	//Check if portal (gel=undefined) or classic UI, and get the HREF data appropriately in either case.
	var hrefPath = (typeof gel == 'undefined') ? this.location.href : top.location.href;
	var results = regex.exec(hrefPath);
	
	console.debug('HREF: ' + hrefPath);
	
	if (results == null) {
		return "";
	} else {
		return unescape(results[1]);
	}
}]]></script>
        <sys_class_name>catalog_script_client</sys_class_name>
        <sys_created_by>rohit.kumar</sys_created_by>
        <sys_created_on>2021-12-03 18:14:34</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>b138228c07d8011095c1f4be7c1ed044</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>set variable value from url</sys_name>
        <sys_overrides/>
        <sys_package display_value="Portal Util" source="x_26525_portal">52e536ea0700011095c1f4be7c1ed096</sys_package>
        <sys_policy/>
        <sys_scope display_value="Portal Util">52e536ea0700011095c1f4be7c1ed096</sys_scope>
        <sys_update_name>catalog_script_client_b138228c07d8011095c1f4be7c1ed044</sys_update_name>
        <sys_updated_by>rohit.kumar</sys_updated_by>
        <sys_updated_on>2021-12-03 18:14:34</sys_updated_on>
        <table/>
        <type/>
        <ui_type>10</ui_type>
        <variable_set display_value="Set Variable Value">25186a4c07d8011095c1f4be7c1ed0dc</variable_set>
        <view/>
    </catalog_script_client>
</record_update>
